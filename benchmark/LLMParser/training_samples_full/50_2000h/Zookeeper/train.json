[{"instruction":"Parse the input log to log template.","input":"Received connection request \/10.10.34.12:47524","output":"Received connection request <*>"},{"instruction":"Parse the input log to log template.","input":"Connection broken for id 188978561024, my id = 1, error =","output":"Connection broken for id <*>, my id = <*>, error =<*>"},{"instruction":"Parse the input log to log template.","input":"Interrupting SendWorker","output":"Interrupting SendWorker"},{"instruction":"Parse the input log to log template.","input":"Interrupted while waiting for message on queue","output":"Interrupted while waiting for message on queue"},{"instruction":"Parse the input log to log template.","input":"Send worker leaving thread","output":"Send worker leaving thread"},{"instruction":"Parse the input log to log template.","input":"Cannot open channel to 3 at election address \/10.10.34.13:3888","output":"Cannot open channel to <*> at election address <*>"},{"instruction":"Parse the input log to log template.","input":"Notification: 3 (n.leader), 0x0 (n.zxid), 0x1 (n.round), LOOKING (n.state), 3 (n.sid), 0x0 (n.peerEPoch), FOLLOWING (my state)","output":"Notification: <*> (n.leader), <*> (n.zxid), <*> (n.round), <*> (n.state), <*> (n.sid), <*> (n.peerEPoch), <*> (my state)"},{"instruction":"Parse the input log to log template.","input":"Notification time out: 3200","output":"Notification time out: <*>"},{"instruction":"Parse the input log to log template.","input":"currentEpoch not found! Creating with a reasonable default of 0. This should only happen when you are upgrading your installation","output":"currentEpoch not found! Creating with a reasonable default of <*>. This should only happen when you are upgrading your installation"},{"instruction":"Parse the input log to log template.","input":"Snapshotting: 0x0 to \/var\/lib\/zookeeper\/version-2\/snapshot.0","output":"Snapshotting: <*> to <*>"},{"instruction":"Parse the input log to log template.","input":"Reading configuration from: \/etc\/zookeeper\/conf\/zoo.cfg","output":"Reading configuration from: <*>"},{"instruction":"Parse the input log to log template.","input":"Defaulting to majority quorums","output":"Defaulting to majority quorums"},{"instruction":"Parse the input log to log template.","input":"autopurge.snapRetainCount set to 3","output":"autopurge.snapRetainCount set to <*>"},{"instruction":"Parse the input log to log template.","input":"autopurge.purgeInterval set to 0","output":"autopurge.purgeInterval set to <*>"},{"instruction":"Parse the input log to log template.","input":"Purge task is not scheduled.","output":"Purge task is not scheduled."},{"instruction":"Parse the input log to log template.","input":"Starting quorum peer","output":"Starting quorum peer"},{"instruction":"Parse the input log to log template.","input":"binding to port 0.0.0.0\/0.0.0.0:2181","output":"binding to port <*>"},{"instruction":"Parse the input log to log template.","input":"tickTime set to 2000","output":"tickTime set to <*>"},{"instruction":"Parse the input log to log template.","input":"minSessionTimeout set to -1","output":"minSessionTimeout set to <*>"},{"instruction":"Parse the input log to log template.","input":"maxSessionTimeout set to -1","output":"maxSessionTimeout set to <*>"},{"instruction":"Parse the input log to log template.","input":"initLimit set to 10","output":"initLimit set to <*>"},{"instruction":"Parse the input log to log template.","input":"My election bind port: 0.0.0.0\/0.0.0.0:3888","output":"My election bind port: <*>"},{"instruction":"Parse the input log to log template.","input":"LOOKING","output":"LOOKING"},{"instruction":"Parse the input log to log template.","input":"New election. My id = 1, proposed zxid=0x0","output":"New election. My id = <*>, proposed <*>"},{"instruction":"Parse the input log to log template.","input":"FOLLOWING","output":"FOLLOWING"},{"instruction":"Parse the input log to log template.","input":"TCP NoDelay set to: true","output":"TCP NoDelay set to: <*>"},{"instruction":"Parse the input log to log template.","input":"Server environment:zookeeper.version=3.4.5--1, built on 06\/10\/2013 17:26 GMT","output":"Server environment:zookeeper.version=<*>, built on <*> GMT"},{"instruction":"Parse the input log to log template.","input":"Server environment:host.name=node1","output":"Server environment:host.name=<*>"},{"instruction":"Parse the input log to log template.","input":"Server environment:java.version=1.7.0_79","output":"Server environment:java.version=<*>"},{"instruction":"Parse the input log to log template.","input":"Server environment:java.vendor=Oracle Corporation","output":"Server environment:java.vendor=<*>"},{"instruction":"Parse the input log to log template.","input":"Server environment:java.home=\/usr\/lib\/jvm\/java-7-openjdk-amd64\/jre","output":"Server environment:java.home=<*>"},{"instruction":"Parse the input log to log template.","input":"Server environment:java.class.path=\/etc\/zookeeper\/conf:\/usr\/share\/java\/jline.jar:\/usr\/share\/java\/log4j-1.2.jar:\/usr\/share\/java\/xercesImpl.jar:\/usr\/share\/java\/xmlParserAPIs.jar:\/usr\/share\/java\/netty.jar:\/usr\/share\/java\/slf4j-api.jar:\/usr\/share\/java\/slf4j-log4j12.jar:\/usr\/share\/java\/zookeeper.jar","output":"Server environment:java.class.path=<*>"},{"instruction":"Parse the input log to log template.","input":"Server environment:java.io.tmpdir=\/tmp","output":"Server environment:java.io.tmpdir=<*>"},{"instruction":"Parse the input log to log template.","input":"Server environment:java.compiler=<NA>","output":"Server environment:java.compiler=<*>"},{"instruction":"Parse the input log to log template.","input":"Server environment:os.name=Linux","output":"Server environment:os.name=<*>"},{"instruction":"Parse the input log to log template.","input":"Server environment:os.arch=amd64","output":"Server environment:os.arch=<*>"},{"instruction":"Parse the input log to log template.","input":"Server environment:os.version=3.16.0-30-generic","output":"Server environment:os.version=<*>"},{"instruction":"Parse the input log to log template.","input":"Server environment:user.name=zookeeper","output":"Server environment:user.name=<*>"},{"instruction":"Parse the input log to log template.","input":"Server environment:user.home=\/var\/lib\/zookeeper","output":"Server environment:user.home=<*>"},{"instruction":"Parse the input log to log template.","input":"Server environment:user.dir=\/","output":"Server environment:user.dir=<*>"},{"instruction":"Parse the input log to log template.","input":"Created server with tickTime 2000 minSessionTimeout 4000 maxSessionTimeout 40000 datadir \/var\/lib\/zookeeper\/version-2 snapdir \/var\/lib\/zookeeper\/version-2","output":"Created server with tickTime <*> minSessionTimeout <*> maxSessionTimeout <*> datadir <*> snapdir <*>"},{"instruction":"Parse the input log to log template.","input":"FOLLOWING - LEADER ELECTION TOOK - 46837","output":"FOLLOWING - LEADER ELECTION TOOK - <*>"},{"instruction":"Parse the input log to log template.","input":"Getting a diff from the leader 0x0","output":"Getting a diff from the leader <*>"},{"instruction":"Parse the input log to log template.","input":"Received connection request \/10.10.34.13:57775","output":"Received connection request <*>"},{"instruction":"Parse the input log to log template.","input":"Connection broken for id 188978561024, my id = 1, error =","output":"Connection broken for id <*>, my id = <*>, error =<*>"},{"instruction":"Parse the input log to log template.","input":"Interrupting SendWorker","output":"Interrupting SendWorker"},{"instruction":"Parse the input log to log template.","input":"Interrupted while waiting for message on queue","output":"Interrupted while waiting for message on queue"},{"instruction":"Parse the input log to log template.","input":"Send worker leaving thread","output":"Send worker leaving thread"},{"instruction":"Parse the input log to log template.","input":"Cannot open channel to 3 at election address \/10.10.34.13:3888","output":"Cannot open channel to <*> at election address <*>"},{"instruction":"Parse the input log to log template.","input":"Notification: 3 (n.leader), 0x0 (n.zxid), 0x1 (n.round), LOOKING (n.state), 3 (n.sid), 0x0 (n.peerEPoch), FOLLOWING (my state)","output":"Notification: <*> (n.leader), <*> (n.zxid), <*> (n.round), <*> (n.state), <*> (n.sid), <*> (n.peerEPoch), <*> (my state)"}]